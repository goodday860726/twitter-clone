{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Tweet.js","components/TweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseInstance","authService","dbService","storageService","AuthForm","useState","error","setError","email","setEmail","password","setPassword","newAccount","setNewAccount","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Tweet","tweetObj","isOwner","editing","setEditing","text","newTweet","setNewTweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","class","faTrash","faPencilAlt","TweetFactory","userObj","tweet","setTweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishiedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","tweets","setTweets","useEffect","onSnapshot","snapshot","tweetArray","docs","map","marginTop","key","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","getMyTweets","where","orderBy","get","updateProfile","signOut","push","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","from","App","init","setInit","setUserObj","onAuthStateChanged","user","args","Boolean","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.39bc6d8f.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\n\nexport const authService = firebase.auth();\n\nexport const dbService = firebase.firestore();\n\nexport const storageService = firebase.storage();","import React, { useState } from 'react';\nimport { authService } from 'fbase';\n\nconst AuthForm = () => {\n  const [error, setError] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true); \n\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          name=\"email\"\n          type=\"text\"\n          placeholder=\"email\"\n          required\n          value={email}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"password\"\n          required\n          value={password}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          type=\"submit\"\n          className=\"authInput authSubmit\"\n          value={newAccount ? \"Create New Account\" : \"Log In\"}\n        />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? \"Log In\" : \"Create Account\"}\n      </span>\n    </>\n  );\n}\n\nexport default AuthForm;","import React from \"react\";\nimport { authService, firebaseInstance } from \"fbase\";\nimport AuthForm from \"components/AuthForm\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter, faGoogle, faGithub } from \"@fortawesome/free-brands-svg-icons\";\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target: {name},\n    } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    await authService.signInWithPopup(provider);\n  };\n  \n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={\"#04AAFF\"}\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button name=\"google\" onClick={onSocialClick} className=\"authBtn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button name=\"github\" onClick={onSocialClick} className=\"authBtn\">\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );}; \nexport default Auth; ","import React, { useState } from 'react'\nimport { dbService, storageService } from 'fbase';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Tweet = ({ tweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newTweet, setNewTweet] = useState(tweetObj.text);\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure you want delete this tweet?\");\n    if (ok) {\n      await dbService.doc(`/tweets/${tweetObj.id}`).delete();\n      await storageService.refFromURL(tweetObj.attachmentUrl).delete();\n    }\n  }\n  const toggleEditing = () => setEditing((prev) => !prev);\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.doc(`tweets/${tweetObj.id}`).update({\n      text: newTweet,\n    });\n    setEditing(false);\n  }\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event\n    setNewTweet(value);\n  }\n  return (\n    <div className=\"tweet\">\n      {editing ? (\n        <>\n          {isOwner && (\n            <>\n              <form onSubmit={onSubmit} className=\"container tweetEdit\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Edit Your Tweet!\"\n                  value={newTweet}\n                  onChange={onChange}\n                  required\n                  autoFocus\n                  className=\"formInput\"\n                />\n                <input type=\"submit\" value=\"Update Tweet\" className=\"formBtn\" />\n              </form>\n              <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n                Cancel\n              </span>\n            </>\n          )}\n        </>\n      ) : (\n        <>\n          <h4>{tweetObj.text}</h4>\n          {tweetObj.attachmentUrl && <img src={tweetObj.attachmentUrl} />}\n          {isOwner && (\n            <div class=\"tweet__actions\">\n              <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Tweet\n","import React, { useState } from 'react';\nimport { dbService, storageService } from \"fbase\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst TweetFactory = ({ userObj }) => {\n    const [tweet, setTweet] = useState(\"\");\n    const [attachment, setAttachment] = useState(\"\");\n\n    const onSubmit = async (event) => {\n      if (tweet === \"\") {\n        return;\n      }\n      event.preventDefault();\n      let attachmentUrl = \"\";\n      if (attachment != \"\") {\n        const attachmentRef = storageService\n          .ref()\n          .child(`${userObj.uid}/${uuidv4()}`);\n        const response = await attachmentRef.putString(attachment, \"data_url\");\n        attachmentUrl = await response.ref.getDownloadURL();\n      }\n      const tweetObj = {\n        text: tweet,\n        createdAt: Date.now(),\n        creatorId: userObj.uid,\n        attachmentUrl,\n      };\n      await dbService.collection(\"tweets\").add(tweetObj);\n      setTweet(\"\");\n      setAttachment(\"\");\n    };\n    const onChange = (event) => {\n      const {\n        target: { value },\n      } = event;\n      setTweet(value);\n    };\n    const onFileChange = (event) => {\n      const {\n        target: { files },\n      } = event;\n      const theFile = files[0];\n      const reader = new FileReader();\n      reader.onloadend = (finishiedEvent) => {\n        const {\n          currentTarget: { result },\n        } = finishiedEvent;\n        setAttachment(result);\n      };\n      reader.readAsDataURL(theFile);\n    };\n    const onClearAttachment = () => setAttachment(\"\");\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"factoryForm\">\n        <div className=\"factoryInput__container\">\n          <input\n            className=\"factoryInput__input\"\n            value={tweet}\n            onChange={onChange}\n            type=\"text\"\n            placeholder=\"What`s on your maind?\"\n            maxLength={120}\n          />\n          <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n        </div>\n        <label for=\"attach-file\" className=\"factoryInput__label\">\n          <sapn>Add photos</sapn>\n          <FontAwesomeIcon icon={faPlus} />\n        </label>\n        <input\n          id=\"attach-file\"\n          type=\"file\"\n          accept=\"image/*\"\n          onChange={onFileChange}\n          style={{\n            opacity: 0,\n          }}\n        />\n        {attachment && (\n          <div className=\"factoryForm__attachment\">\n            <img\n              src={attachment}\n              style={{\n                backgroundImage: attachment,\n              }}\n            />\n            <div className=\"factoryForm\">\n              <span>Remove</span>\n              <FontAwesomeIcon icon={faTimes} />\n            </div>\n            <button onClick={onClearAttachment}>Clear</button>\n          </div>\n        )}\n      </form>\n    </>\n  );\n};\n\nexport default TweetFactory;","import React, { useState, useEffect } from \"react\";\nimport { dbService } from \"fbase\";\nimport Tweet from \"components/Tweet\";\nimport TweetFactory from \"components/TweetFactory\";\n\nconst Home = ({ userObj }) => {\n  const [tweets, setTweets] = useState([]);\n  useEffect(() => {\n    dbService.collection(\"tweets\").onSnapshot(snapshot => {\n      const tweetArray = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setTweets(tweetArray);\n    });\n  }, [])\n\n  return (\n    <div className=\"container\">\n      <TweetFactory userObj={userObj} />\n      <div style={{ marginTop: 30 }}>\n        {tweets.map((tweet) => (\n          <Tweet\n            key={tweet.id}\n            tweetObj={tweet}\n            isOwner={tweet.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\nexport default Home;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObj }) => (\n  <nav>\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n      <li>\n        <Link to=\"/\" style={{ marginRight: 10 }}>\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n        </Link>\n      </li>\n      <li>\n        <Link\n          to=\"/profile\"\n          style={{\n            marginLeft: 10,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            fontSize: 12,\n          }}\n        >\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n          <span style={{ marginTop: 10 }}>\n            {userObj.displayName\n              ? `${userObj.displayName}의 Profile`\n              : \"Profile\"}\n          </span>\n        </Link>\n      </li>\n    </ul>\n  </nav>\n);\n\nexport default Navigation;\n","import React, { useEffect, useState } from \"react\";\nimport { authService, dbService } from \"fbase\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default ({ refreshUser, userObj }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n  const getMyTweets = async() => {\n    const tweets = await dbService\n      .collection(\"tweets\")\n      .where(\"creatorId\", \"==\", userObj.uid)\n      .orderBy(\"createdAt\")\n      .get();\n    console.log(tweets.docs.map((doc) => doc.data()))\n  } \n  useEffect(() => {\n    getMyTweets();\n  },[])\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName\n      });\n      refreshUser();\n    } \n  };\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input\n          className=\"formInput\"\n          onChange={onChange}\n          type=\"input\"\n          autoFocus\n          placeholder=\"Display Name\"\n          value={newDisplayName}\n        />\n        <input\n          className=\"formBtn\"\n          type=\"submit\"\n          value=\"Update Profile\"\n          style={{\n            marginTop: 10,\n          }}\n        />\n      </form>\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>Log Out</span>\n    </div>\n  );\n};\n","import React from 'react'\nimport {HashRouter as Router, Route, Switch, Redirect } from 'react-router-dom'\nimport Auth from '../routes/Auth';\nimport Home from '../routes/Home';\nimport Navigation from './Navigation';\nimport Profile from 'routes/Profile';\n\nconst AppRouter = ({ refreshUser,isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <div\n            style={{\n              maxWidth: 890,\n              width: \"100%\",\n              margin: \"0 auto\",\n              marginTop: 80,\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile refreshUser={refreshUser} userObj={userObj} />\n            </Route>\n            <Redirect from=\"*\" to=\"/\" />\n          </div>\n        ) : (\n          <>\n            <Route exact path=\"/\">\n              {\" \"}\n              <Auth />{\" \"}\n            </Route>\n            <Redirect from=\"*\" to=\"/\" />\n          </>\n        )}\n      </Switch>\n    </Router>\n  );\n}\n\nexport default AppRouter;","import React, { useState, useEffect } from 'react';\nimport AppRouter from 'components/Router';\nimport { authService } from 'fbase'; \n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args) \n        });\n      } else {\n         setUserObj(null);\n      }\n      setInit(true);\n    });\n  },[]);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return <>\n    {init ? (\n      <AppRouter \n        isLoggedIn={Boolean(userObj)} \n        userObj={userObj} \n        refreshUser={refreshUser} \n      />\n    ) : (\"Initializing...\")\n    }\n  </>;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}